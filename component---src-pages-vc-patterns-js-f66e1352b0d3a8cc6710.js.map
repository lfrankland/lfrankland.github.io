{"version":3,"sources":["webpack:///./src/components/project-header.js","webpack:///./src/components/tags.js","webpack:///./src/pages/vc-patterns.js","webpack:///./src/components/project-image.js"],"names":["animatedGradient","keyframes","ProjectHeader","styled","header","appearances","light","css","dark","TagGroup","div","Tag","appearance","defaultProps","VCPatternsPage","patternLibraryScreenshot","useStaticQuery","title","size","as","color","href","fluid","childImageSharp","alt","ProjectImage","Img"],"mappings":"2FAAA,kDAEMA,EAAmBC,YAAH,qGAMTC,EAAgBC,IAAOC,OAAV,oFAAGD,CAAH,0JACXH,I,oCCTf,oFAEMK,EAAc,CAClBC,MAAOC,YAAF,yFAKLC,KAAMD,YAAF,mEAMOE,EAAWN,IAAOO,IAAV,iEAAGP,CAAH,oEAORQ,EAAMR,IAAOO,IAAV,4DAAGP,CAAH,uFAMZ,gBAAGS,EAAH,EAAGA,WAAH,OAAoBP,EAAYO,MAGpCD,EAAIE,aAAe,CACjBD,WAAY,U,kCC/Bd,4JASe,SAASE,IAAkB,IAChCC,EAA6BC,yBAAe,cAA5CD,yBAYR,OACE,kBAAC,IAAD,CAAQE,MAAM,QACZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWC,KAAK,SACd,kBAAC,IAAD,CAAMC,GAAG,KAAKD,KAAK,WAAWE,MAAM,SAApC,sBAGA,kBAAC,IAAD,CAAMA,MAAM,SAAZ,+IAKA,kBAAC,IAAD,KACE,kBAAC,IAAD,aACA,kBAAC,IAAD,uBACA,kBAAC,IAAD,aACA,kBAAC,IAAD,sBACA,kBAAC,IAAD,eACA,kBAAC,IAAD,sBACA,kBAAC,IAAD,oBAKN,kBAAC,IAAD,CAAWF,KAAK,SACd,kBAAC,IAAD,CAAMC,GAAG,KAAKD,KAAK,YAAnB,iBAIA,kBAAC,IAAD,qOAMA,kBAAC,IAAD,4FAEgB,IACd,uBAAGG,KAAK,uDAAR,4BAHF,KASA,kBAAC,IAAD,CAAMF,GAAG,KAAKD,KAAK,YAAnB,YAIA,kBAAC,IAAD,4XASA,kBAAC,IAAD,CAAMC,GAAG,KAAKD,KAAK,YAAnB,gCAGA,kBAAC,IAAD,4aAUA,kBAAC,IAAD,CACEI,MAAOP,EAAyBQ,gBAAgBD,MAChDE,IAAI,sCAGN,kBAAC,IAAD,CAAML,GAAG,KAAKD,KAAK,YAAnB,iBAIA,kBAAC,IAAD,mMAGyD,IACvD,uBAAGG,KAAK,qDAAR,+DAJF,KAUA,kBAAC,IAAD,4NAOA,kBAAC,IAAD,CAAMF,GAAG,KAAKD,KAAK,YAAnB,eAIA,kBAAC,IAAD,sKAGmB,IACjB,uBAAGG,KAAK,sBAAR,0BAJF,qHASA,kBAAC,IAAD,CAAMF,GAAG,KAAKD,KAAK,YAAnB,SAIA,kBAAC,IAAD,iaASA,kBAAC,IAAD,CAAMC,GAAG,KAAKD,KAAK,YAAnB,uBAIA,kBAAC,IAAD,+U,kCCpJR,uEAGaO,EAAetB,YAAOuB,KAAV,kFAAGvB,CAAH","file":"component---src-pages-vc-patterns-js-f66e1352b0d3a8cc6710.js","sourcesContent":["import styled, { keyframes } from 'styled-components'\n\nconst animatedGradient = keyframes`\n\t0%{ background-position:0% 50% }\n\t50%{ background-position:100% 50% }\n\t100%{ background-position:0% 50% }\n`\n\nexport const ProjectHeader = styled.header`\n  animation: ${animatedGradient} 24s ease infinite;\n  background-size: 400% 400%;\n  background: var(--main-gradient);\n  color: var(--color-light);\n  margin-bottom: 24px;\n  padding: 64px 0;\n`\n\n/* TODO */\n","import styled, { css } from 'styled-components'\n\nconst appearances = {\n  light: css`\n    background-color: var(--color-light);\n    color: var(--color-dark);\n    mix-blend-mode: lighten;\n  `,\n  dark: css`\n    background-color: var(--color-dark);\n    color: var(--color-light);\n  `,\n}\n\nexport const TagGroup = styled.div`\n  display: inline-flex;\n  flex-wrap: wrap;\n  margin: -4px;\n  max-width: 100%;\n`\n\nexport const Tag = styled.div`\n  border-radius: 6px;\n  font-size: 0.9rem;\n  font-weight: 600;\n  margin: 4px;\n  padding: 2px 8px;\n  ${({ appearance }) => appearances[appearance]}\n`\n\nTag.defaultProps = {\n  appearance: 'light',\n}\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { Container } from '../components/container'\nimport { Layout } from '../components/layout'\nimport { ProjectHeader } from '../components/project-header'\nimport { ProjectImage } from '../components/project-image'\nimport { TagGroup, Tag } from '../components/tags'\nimport { Text } from '../components/text'\n\nexport default function VCPatternsPage() {\n  const { patternLibraryScreenshot } = useStaticQuery(\n    graphql`\n      query {\n        patternLibraryScreenshot: file(\n          relativePath: { eq: \"pattern-library.png\" }\n        ) {\n          ...fluidImage\n        }\n      }\n    `\n  )\n\n  return (\n    <Layout title=\"Page\">\n      <ProjectHeader>\n        <Container size=\"small\">\n          <Text as=\"h1\" size=\"display1\" color=\"white\">\n            VC Pattern Library\n          </Text>\n          <Text color=\"white\">\n            The VC Pattern Library was used to deliever front-end components\n            across multiple products and services for different sectors and\n            audiences.\n          </Text>\n          <TagGroup>\n            <Tag>HTML</Tag>\n            <Tag>CSS Experience</Tag>\n            <Tag>Sass</Tag>\n            <Tag>Accessibility</Tag>\n            <Tag>Design</Tag>\n            <Tag>Documentation</Tag>\n            <Tag>Coaching</Tag>\n          </TagGroup>\n        </Container>\n      </ProjectHeader>\n\n      <Container size=\"small\">\n        <Text as=\"h2\" size=\"heading2\">\n          The challenge\n        </Text>\n\n        <Text>\n          Working at Virtual College the product and development team were\n          running into issues of inflated CSS files, inconsistent application of\n          front-end code and trouble identifying and resolving issues quickly\n          and effectively.\n        </Text>\n        <Text>\n          Researching different best practices of how to resolve this, I settled\n          on creating a{' '}\n          <a href=\"https://virtualcollege.github.io/vc-app-patterns/#/\">\n            frontend pattern library\n          </a>\n          .\n        </Text>\n\n        <Text as=\"h2\" size=\"heading2\">\n          Research\n        </Text>\n\n        <Text>\n          To help solve the common design and development problems, I first\n          investigated what solutions could and would work for the current\n          development team and how best to integrate into existing projects and\n          ensure that it would be reusable for future work. Reviewing some of\n          the more popular and seeing how they were put together from both a\n          design and development perspective.\n        </Text>\n\n        <Text as=\"h2\" size=\"heading2\">\n          Breaking down the components\n        </Text>\n        <Text>\n          Once I settled on creating the pattern library, the first task was to\n          break down the UI into separate components. This involved reviewing\n          the existing views and identifying the shared elements across\n          different applications and understanding all the use cases and states\n          they could be in. Starting with the most basic elements such as\n          buttons, inputs, typography, I defined, designed and documented each\n          in HTML and CSS.\n        </Text>\n\n        <ProjectImage\n          fluid={patternLibraryScreenshot.childImageSharp.fluid}\n          alt=\"Screenshot of the Pattern Library\"\n        />\n\n        <Text as=\"h2\" size=\"heading2\">\n          Accessibility\n        </Text>\n\n        <Text>\n          One of the key benefits of the pattern library was the ability to\n          decouple the front-end from back-end code. This allowed me to test\n          each component for accessibility and ensure it met the{' '}\n          <a href=\"https://www.w3.org/WAI/standards-guidelines/wcag/\">\n            Web Content Accessibility Guidelines (WCAG) AA 2.1 standard\n          </a>\n          .\n        </Text>\n\n        <Text>\n          As well as meeting the accessibility standards, I also worked to\n          ensure browser compatibility by testing components and layouts across\n          multiple devices and browsers, identifying and resolving issues\n          efficiently.\n        </Text>\n\n        <Text as=\"h2\" size=\"heading2\">\n          Methodology\n        </Text>\n\n        <Text>\n          As well as researching pattern libraries, I also looked into different\n          front-end methodologies. Experimenting with Atomic, OOCSS and SMACC, I\n          settled on using{' '}\n          <a href=\"http://getbem.com/\">Block Element Modifier</a>. This gave me\n          a flat CSS structure which was performant, stopped CSS conflicts and\n          helped with code readability.\n        </Text>\n\n        <Text as=\"h2\" size=\"heading2\">\n          Build\n        </Text>\n\n        <Text>\n          To help with the maintainability of the pattern library, I used Sass\n          to help manage consistent colours, sizes, breakpoints and more across\n          the patterns. As well as building the deliverable code which was\n          passed onto other developers, I also produced a documentation site,\n          which detailed each of the available components, explaining what they\n          are used for, code examples and the different modifiers available.\n        </Text>\n\n        <Text as=\"h2\" size=\"heading2\">\n          Practice &amp; Adoption\n        </Text>\n\n        <Text>\n          Once the pattern library was in a deliverable state, I facilitated the\n          move from the legacy front-end system. I ran workshops with other\n          developers, explaining the principles of the pattern library and how\n          to get the best out of it. I also worked directly on applications to\n          ensure the smooth deployment of new components.\n        </Text>\n      </Container>\n    </Layout>\n  )\n}\n","import styled from 'styled-components'\nimport Img from 'gatsby-image'\n\nexport const ProjectImage = styled(Img)`\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\n  margin-bottom: 32px;\n`\n"],"sourceRoot":""}